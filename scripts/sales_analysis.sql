-- SALES DATA ANALYSIS PROJECT
-- Author: Abubakar Abdallah
-- Description: A collection of basic SQL queries to analyze and understand sales data.
-- Demonstrates skills in: Aggregation, Filtering, Sorting, and basic data exploration.

-- 1. VIEW ENTIRE DATASET
-- Gets a complete overview of the available data.
SELECT * 
FROM sales_data;

-- 2. TOTAL NUMBER OF ORDERS
-- Calculates the total volume of orders processed.
SELECT COUNT(*) AS total_orders 
FROM sales_data;

-- 3. ORDER DATE RANGE
-- Identifies the timeframe of the dataset by finding the first and last order dates.
SELECT 
    MIN(ORDER_DATE) AS first_order_date, 
    MAX(ORDER_DATE) AS last_order_date 
FROM sales_data;

-- 4. ORDERS BY STATUS
-- Breaks down the number of orders by their status (e.g., Shipped, Cancelled).
SELECT 
    STATUS, 
    COUNT(*) AS order_count
FROM sales_data
GROUP BY STATUS
ORDER BY order_count DESC;

-- 5. TOTAL SALES AMOUNT
-- Calculates the total revenue generated from all orders.
SELECT ROUND(SUM(SALES), 2) AS total_sales 
FROM sales_data;

-- 6. SALES BY YEAR
-- Shows annual revenue trends.
SELECT 
    YEAR_ID, 
    ROUND(SUM(SALES), 2) AS yearly_sales
FROM sales_data
GROUP BY YEAR_ID
ORDER BY YEAR_ID;

-- 7. TOP 20 PRODUCTS BY SALES
-- Ranks individual products (by product code) based on total revenue.
SELECT 
    PRODUCT_LINE, 
    PRODUCT_CODE, 
    ROUND(SUM(SALES), 2) AS total_sales
FROM sales_data
GROUP BY PRODUCT_LINE, PRODUCT_CODE
ORDER BY total_sales DESC
LIMIT 20;

-- 8. SALES BY PRODUCT LINE
-- Shows revenue generated by each major product category.
SELECT 
    PRODUCT_LINE, 
    ROUND(SUM(SALES), 2) AS total_sales
FROM sales_data
GROUP BY PRODUCT_LINE
ORDER BY total_sales DESC;

-- 9. TOP 10 CUSTOMERS BY SALES
-- Identifies the most valuable customers based on their total spending.
SELECT 
    CUSTOMER_NAME, 
    ROUND(SUM(SALES), 2) AS total_spent
FROM sales_data
GROUP BY CUSTOMER_NAME
ORDER BY total_spent DESC
LIMIT 10;

-- 10. AVERAGE ORDER VALUE (AOV)
-- Calculates the average monetary value of a single order.
SELECT ROUND(AVG(SALES), 2) AS avg_order_value 
FROM sales_data;

-- 11. SALES BY COUNTRY
-- Analyzes revenue distribution across different countries.
SELECT 
    COUNTRY, 
    ROUND(SUM(SALES), 2) AS total_sales
FROM sales_data
GROUP BY COUNTRY
ORDER BY total_sales DESC;

-- 12. ORDERS BY DEAL SIZE
-- Categorizes orders based on their pre-defined size (Small, Medium, Large).
SELECT 
    DEAL_SIZE, 
    COUNT(*) AS order_count
FROM sales_data
GROUP BY DEAL_SIZE
ORDER BY order_count DESC;

-- 13. QUARTERLY SALES BREAKDOWN
-- Analyzes revenue trends by quarter across all years.
SELECT 
    QTR_ID,
    ROUND(SUM(SALES), 2) AS quarterly_sales
FROM sales_data
GROUP BY QTR_ID
ORDER BY QTR_ID;

-- 14. AVERAGE QUANTITY ORDERED PER PRODUCT LINE
-- Determines the average number of units ordered for each product category.
SELECT 
    PRODUCT_LINE,
    ROUND(AVG(QUANTITY_ORDERED), 2) AS avg_quantity
FROM sales_data
GROUP BY PRODUCT_LINE
ORDER BY avg_quantity DESC;